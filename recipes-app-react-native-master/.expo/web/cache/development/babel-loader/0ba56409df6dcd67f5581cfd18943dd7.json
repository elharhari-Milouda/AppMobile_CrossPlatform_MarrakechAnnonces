{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients } from \"./dataArrays\";\nimport axios from \"axios\";\nimport { useLayoutEffect, useEffect, useState } from \"react\";\nexport function getCategoryById(categoryId) {\n  var category;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\nexport function getIngredientName(ingredientID) {\n  var name;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getIngredientUrl(ingredientID) {\n  var url;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n  return url;\n}\nexport function getCategoryName(categoryId) {\n  var name;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getAnnonces(categoryId) {\n  var annoncesArray = [];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      annonces = _useState2[0],\n      setAnnonces = _useState2[1];\n\n  axios.get('http://192.168.1.105:8000/api/annonces').then(function (response) {\n    console.log(response.data.annonce[0].id);\n    setAnnonces(response.data.annonce);\n  }).catch(function (error) {\n    alert(error.message);\n  });\n  annonces.map(function (data) {\n    if (data.categoryId == categoryId) {\n      annoncesArray.push(data);\n    }\n  });\n  return annoncesArray;\n}\nexport function getRecipesByIngredient(ingredientId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    data.ingredients.map(function (index) {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\nexport function getNumberOfRecipes(categoryId) {\n  var count = 0;\n  recipes.map(function (data) {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\nexport function getAllIngredients(idArray) {\n  var ingredientsArray = [];\n  idArray.map(function (index) {\n    ingredients.map(function (data) {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\nexport function getRecipesByIngredientName(ingredientName) {\n  var nameUpper = ingredientName.toUpperCase();\n  var recipesArray = [];\n  ingredients.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes = getRecipesByIngredient(data.ingredientId);\n\n      var unique = _toConsumableArray(new Set(_recipes));\n\n      unique.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n\n  var uniqueArray = _toConsumableArray(new Set(recipesArray));\n\n  return uniqueArray;\n}\nexport function getRecipesByCategoryName(categoryName) {\n  var nameUpper = categoryName.toUpperCase();\n  var recipesArray = [];\n  categories.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes2 = getAnnonces(data.id);\n\n      _recipes2.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\nexport function getRecipesByRecipeName(recipeName) {\n  var nameUpper = recipeName.toUpperCase();\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}","map":{"version":3,"names":["React","Component","recipes","categories","ingredients","axios","useLayoutEffect","useEffect","useState","getCategoryById","categoryId","category","map","data","id","getIngredientName","ingredientID","name","ingredientId","getIngredientUrl","url","photo_url","getCategoryName","getAnnonces","annoncesArray","annonces","setAnnonces","get","then","response","console","log","annonce","catch","error","alert","message","push","getRecipesByIngredient","recipesArray","index","getNumberOfRecipes","count","getAllIngredients","idArray","ingredientsArray","getRecipesByIngredientName","ingredientName","nameUpper","toUpperCase","includes","unique","Set","item","uniqueArray","getRecipesByCategoryName","categoryName","getRecipesByRecipeName","recipeName","title"],"sources":["C:/Users/atlas pro electro/ReactNativeApps/recipes-app-react-native-master/src/data/MockDataAPI.js"],"sourcesContent":["import { Text } from 'react-native';\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients } from './dataArrays';\nimport axios from \"axios\";\nimport { useLayoutEffect, useEffect, useState } from \"react\";\n\nexport function getCategoryById(categoryId) {\n  let category;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\n\nexport function getIngredientName(ingredientID) {\n  let name;\n  ingredients.map(data => {\n    if (data.ingredientId == ingredientID) {\n      name = data.name;\n    }\n  });\n  return name;\n}\n\nexport function getIngredientUrl(ingredientID) {\n  let url;\n  ingredients.map(data => {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n  return url;\n}\n\nexport function getCategoryName(categoryId) {\n  let name;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\n\nexport function getAnnonces(categoryId) {\n  const annoncesArray = [];\n  //********* */\n  const [annonces, setAnnonces] = useState([]);\n  axios\n      .get('http://192.168.1.105:8000/api/annonces')\n      .then(function (response) {\n       console.log(response.data.annonce[0].id);\n       setAnnonces(response.data.annonce);\n      })\n      .catch(function (error) {\n        // handle error\n        alert(error.message);\n      });\n\n  //********* */\n  annonces.map(data => {\n    if (data.categoryId == categoryId) {\n      annoncesArray.push(data);\n    }\n  });\n  return annoncesArray;\n}\n\n// modifica\nexport function getRecipesByIngredient(ingredientId) {\n  const recipesArray = [];\n  recipes.map(data => {\n    data.ingredients.map(index => {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\n\nexport function getNumberOfRecipes(categoryId) {\n  let count = 0;\n  recipes.map(data => {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\n\nexport function getAllIngredients(idArray) {\n  const ingredientsArray = [];\n  idArray.map(index => {\n    ingredients.map(data => {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\n\n// functions for search\nexport function getRecipesByIngredientName(ingredientName) {\n  const nameUpper = ingredientName.toUpperCase();\n  const recipesArray = [];\n  ingredients.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      // data.name.yoUpperCase() == nameUpper\n      const recipes = getRecipesByIngredient(data.ingredientId);\n      const unique = [...new Set(recipes)];\n      unique.map(item => {\n        recipesArray.push(item);\n      });\n    }\n  });\n  const uniqueArray = [...new Set(recipesArray)];\n  return uniqueArray;\n}\n\nexport function getRecipesByCategoryName(categoryName) {\n  const nameUpper = categoryName.toUpperCase();\n  const recipesArray = [];\n  categories.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      const recipes = getAnnonces(data.id); // return a vector of recipes\n      recipes.map(item => {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\n\nexport function getRecipesByRecipeName(recipeName) {\n  const nameUpper = recipeName.toUpperCase();\n  const recipesArray = [];\n  recipes.map(data => {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}