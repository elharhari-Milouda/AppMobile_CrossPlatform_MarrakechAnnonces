{"ast":null,"code":"import React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport { getAnnonces, getCategoryName } from \"../../data/MockDataAPI\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RecipesListScreen(props) {\n  var _route$params;\n\n  var navigation = props.navigation,\n      route = props.route;\n  var item = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.category;\n  var annoncesArray = getAnnonces(item.id);\n  useLayoutEffect(function () {\n    var _route$params2;\n\n    navigation.setOptions({\n      title: (_route$params2 = route.params) == null ? void 0 : _route$params2.title,\n      headerRight: function headerRight() {\n        return _jsx(View, {});\n      }\n    });\n  }, []);\n\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          style: styles.photo,\n          source: {\n            uri: item.photo_url\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: item.title\n        }), _jsx(Text, {\n          style: styles.category,\n          children: getCategoryName(item.categoryId)\n        })]\n      })\n    });\n  };\n\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      vertical: true,\n      showsVerticalScrollIndicator: false,\n      numColumns: 2,\n      data: annoncesArray,\n      renderItem: renderRecipes,\n      keyExtractor: function keyExtractor(item) {\n        return \"\" + item.recipeId;\n      }\n    })\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","styles","getAnnonces","getCategoryName","RecipesListScreen","props","navigation","route","item","params","category","annoncesArray","id","setOptions","title","headerRight","onPressRecipe","navigate","renderRecipes","container","photo","uri","photo_url","categoryId","recipeId"],"sources":["C:/Users/atlas pro electro/ReactNativeApps/recipes-app-react-native-master/src/screens/RecipesList/RecipesListScreen.js"],"sourcesContent":["import React, { useLayoutEffect } from \"react\";\nimport { FlatList, Text, View, TouchableHighlight, Image } from \"react-native\";\nimport styles from \"./styles\";\nimport { getAnnonces, getCategoryName } from \"../../data/MockDataAPI\";\n\nexport default function RecipesListScreen(props) {\n  const { navigation, route } = props;\n\n  const item = route?.params?.category;\n  const annoncesArray = getAnnonces(item.id);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: route.params?.title,\n      headerRight: () => <View />,\n    });\n  }, []);\n\n  const onPressRecipe = (item) => {\n    navigation.navigate(\"Recipe\", { item });\n  };\n\n  const renderRecipes = ({ item }) => (\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\n      <View style={styles.container}>\n        <Image style={styles.photo} source={{ uri: item.photo_url }} />\n        <Text style={styles.title}>{item.title}</Text>\n        <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\n      </View>\n    </TouchableHighlight>\n  );\n\n  return (\n    <View>\n      <FlatList vertical showsVerticalScrollIndicator={false} numColumns={2} data={annoncesArray} renderItem={renderRecipes} keyExtractor={(item) => `${item.recipeId}`} />\n    </View>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,eAAhB,QAAuC,OAAvC;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,WAAT,EAAsBC,eAAtB;;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;EAAA;;EAAA,IACvCC,UADuC,GACjBD,KADiB,CACvCC,UADuC;EAAA,IAC3BC,KAD2B,GACjBF,KADiB,CAC3BE,KAD2B;EAG/C,IAAMC,IAAI,GAAGD,KAAH,qCAAGA,KAAK,CAAEE,MAAV,qBAAG,cAAeC,QAA5B;EACA,IAAMC,aAAa,GAAGT,WAAW,CAACM,IAAI,CAACI,EAAN,CAAjC;EAEAZ,eAAe,CAAC,YAAM;IAAA;;IACpBM,UAAU,CAACO,UAAX,CAAsB;MACpBC,KAAK,oBAAEP,KAAK,CAACE,MAAR,qBAAE,eAAcK,KADD;MAEpBC,WAAW,EAAE;QAAA,OAAM,KAAC,IAAD,KAAN;MAAA;IAFO,CAAtB;EAID,CALc,EAKZ,EALY,CAAf;;EAOA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACR,IAAD,EAAU;IAC9BF,UAAU,CAACW,QAAX,CAAoB,QAApB,EAA8B;MAAET,IAAI,EAAJA;IAAF,CAA9B;EACD,CAFD;;EAIA,IAAMU,aAAa,GAAG,SAAhBA,aAAgB;IAAA,IAAGV,IAAH,QAAGA,IAAH;IAAA,OACpB,KAAC,kBAAD;MAAoB,aAAa,EAAC,qBAAlC;MAAwD,OAAO,EAAE;QAAA,OAAMQ,aAAa,CAACR,IAAD,CAAnB;MAAA,CAAjE;MAAA,UACE,MAAC,IAAD;QAAM,KAAK,EAAEP,MAAM,CAACkB,SAApB;QAAA,WACE,KAAC,KAAD;UAAO,KAAK,EAAElB,MAAM,CAACmB,KAArB;UAA4B,MAAM,EAAE;YAAEC,GAAG,EAAEb,IAAI,CAACc;UAAZ;QAApC,EADF,EAEE,KAAC,IAAD;UAAM,KAAK,EAAErB,MAAM,CAACa,KAApB;UAAA,UAA4BN,IAAI,CAACM;QAAjC,EAFF,EAGE,KAAC,IAAD;UAAM,KAAK,EAAEb,MAAM,CAACS,QAApB;UAAA,UAA+BP,eAAe,CAACK,IAAI,CAACe,UAAN;QAA9C,EAHF;MAAA;IADF,EADoB;EAAA,CAAtB;;EAUA,OACE,KAAC,IAAD;IAAA,UACE,KAAC,QAAD;MAAU,QAAQ,MAAlB;MAAmB,4BAA4B,EAAE,KAAjD;MAAwD,UAAU,EAAE,CAApE;MAAuE,IAAI,EAAEZ,aAA7E;MAA4F,UAAU,EAAEO,aAAxG;MAAuH,YAAY,EAAE,sBAACV,IAAD;QAAA,YAAaA,IAAI,CAACgB,QAAlB;MAAA;IAArI;EADF,EADF;AAKD"},"metadata":{},"sourceType":"module"}