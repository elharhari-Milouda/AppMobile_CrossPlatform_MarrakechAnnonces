{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, useState, useImperativeHandle, useRef, useEffect } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Label from \"../Label\";\nimport { colors } from \"../../colors\";\nimport ShowTextIcon from \"../_icons/ShowTextIcon\";\nvar FormItem = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState({\n    status: false,\n    message: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasError = _useState2[0],\n      setHasError = _useState2[1];\n\n  var _useState3 = useState(new Animated.Value(0)),\n      _useState4 = _slicedToArray(_useState3, 1),\n      animatedBottom = _useState4[0];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      shouldAnimate = _useState6[0],\n      setShouldAnimate = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      wrapperHeight = _useState8[0],\n      setWrapperHeight = _useState8[1];\n\n  var isRequired = props.isRequired,\n      value = props.value,\n      keyboardType = props.keyboardType;\n  var inputRef = useRef();\n\n  var _useState9 = useState(props.secureTextEntry),\n      _useState10 = _slicedToArray(_useState9, 2),\n      hideText = _useState10[0],\n      setHideText = _useState10[1];\n\n  useImperativeHandle(ref, function () {\n    return {\n      setState: function setState() {\n        var validation;\n        if (props.customValidation) validation = props.customValidation();\n        setHasError(containsError(keyboardType, isRequired, value, validation));\n      },\n      focus: function focus() {\n        return inputRef.current.focus();\n      },\n      blur: function blur() {\n        return inputRef.current.blur();\n      },\n      clear: function clear() {\n        return inputRef.current.clear();\n      },\n      isFocused: function isFocused() {\n        return inputRef.current.isFocused();\n      },\n      getComponent: function getComponent() {\n        return 'FormItem';\n      }\n    };\n  });\n\n  var handleBlur = function handleBlur(e) {\n    var validation;\n    if (props.customValidation) validation = props.customValidation();\n    setHasError(containsError(keyboardType, isRequired, value, validation));\n    if (props.onBlur) props.onBlur(e);\n  };\n\n  var handleFocus = function handleFocus(e) {\n    setHasError({\n      status: false,\n      message: ''\n    });\n    if (props.floatingLabel && shouldAnimate) Animated.timing(animatedBottom, {\n      toValue: props.textArea ? 24 : wrapperHeight / 2,\n      useNativeDriver: false,\n      duration: 300\n    }).start(function () {\n      return setShouldAnimate(false);\n    });\n    if (props.onFocus) props.onFocus(e);\n  };\n\n  useEffect(function () {\n    if (props.floatingLabel && props.value) Animated.timing(animatedBottom, {\n      toValue: props.textArea ? 24 : wrapperHeight / 2,\n      useNativeDriver: false,\n      duration: 300\n    }).start(function () {\n      return setShouldAnimate(false);\n    });\n  }, [shouldAnimate]);\n\n  if (props.floatingLabel) {\n    return React.createElement(React.Fragment, null, React.createElement(View, {\n      style: [styles.wrapper, props.textArea ? {\n        height: 120,\n        alignItems: 'flex-start'\n      } : undefined, props.style, hasError.status ? {\n        borderColor: props.errorBorderColor,\n        borderWidth: 1\n      } : undefined],\n      onLayout: function onLayout(_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n        return setWrapperHeight(nativeEvent.layout.height);\n      }\n    }, props.label && React.createElement(Label, {\n      text: props.label,\n      textStyle: [!props.asterik ? {\n        marginLeft: 4\n      } : undefined, props.labelStyle],\n      asterik: props.asterik,\n      style: [props.floatingLabel ? {\n        bottom: animatedBottom\n      } : undefined, {\n        paddingHorizontal: 2,\n        backgroundColor: animatedBottom.interpolate({\n          inputRange: [0, props.textArea ? 24 : wrapperHeight / 2],\n          outputRange: ['transparent', colors.white]\n        }),\n        marginTop: props.textArea ? 16 : 0\n      }]\n    }), React.createElement(View, {\n      style: [styles.wrapper, {\n        marginBottom: 0,\n        flex: 1,\n        paddingHorizontal: 0,\n        height: '100%',\n        position: 'absolute',\n        right: 8,\n        left: 8,\n        backgroundColor: 'transparent'\n      }]\n    }, children, React.createElement(TextInput, _extends({}, props, {\n      style: [styles.inputText, props.textInputStyle],\n      ref: inputRef,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      value: props.value,\n      autoCapitalize: props.autoCapitalize || (props.keyboardType == 'email-address' ? 'none' : undefined),\n      maxLength: props.maxLength || 150,\n      placeholder: \"\",\n      multiline: props.textArea || props.multiline,\n      textAlignVertical: props.textArea ? 'top' : 'center',\n      testID: \"input\",\n      secureTextEntry: hideText\n    })), hasError.status && props.showErrorIcon && React.createElement(View, {\n      style: styles.errorWrapper,\n      testID: \"error icon wrapper\"\n    }, React.createElement(Text, {\n      style: styles.exclamation\n    }, \"!\")), props.secureTextEntry && !hasError.status && React.createElement(Pressable, {\n      onPress: function onPress() {\n        return setHideText(!hideText);\n      }\n    }, React.createElement(ShowTextIcon, {\n      hide: hideText,\n      showIcon: props.showIcon,\n      hideIcon: props.hideIcon\n    })))), hasError.status && React.createElement(Text, {\n      style: [styles.underneathText, props.underneathTextStyle]\n    }, props.underneathText || hasError.message));\n  }\n\n  return React.createElement(React.Fragment, null, props.label && React.createElement(Label, {\n    text: props.label,\n    textStyle: [styles.label, !props.asterik ? {\n      marginLeft: 4\n    } : undefined, props.labelStyle],\n    asterik: props.asterik\n  }), React.createElement(View, {\n    style: [styles.wrapper, props.textArea ? {\n      height: 120\n    } : undefined, props.style, hasError.status ? {\n      borderColor: props.errorBorderColor,\n      borderWidth: 1\n    } : undefined]\n  }, children, React.createElement(TextInput, _extends({}, props, {\n    style: [styles.inputText, props.textInputStyle],\n    ref: inputRef,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    value: props.value,\n    autoCapitalize: props.autoCapitalize || (props.keyboardType == 'email-address' ? 'none' : undefined),\n    maxLength: props.maxLength || 150,\n    multiline: props.textArea || props.multiline,\n    textAlignVertical: props.textArea ? 'top' : 'center',\n    testID: \"input\",\n    secureTextEntry: hideText\n  })), hasError.status && props.showErrorIcon && React.createElement(View, {\n    style: styles.errorWrapper,\n    testID: \"error icon wrapper\"\n  }, React.createElement(Text, {\n    style: styles.exclamation\n  }, \"!\")), props.secureTextEntry && !hasError.status && React.createElement(Pressable, {\n    onPress: function onPress() {\n      return setHideText(!hideText);\n    }\n  }, React.createElement(ShowTextIcon, {\n    hide: hideText,\n    showIcon: props.showIcon,\n    hideIcon: props.hideIcon\n  }))), hasError.status && React.createElement(Text, {\n    style: [styles.underneathText, props.underneathTextStyle]\n  }, props.underneathText || hasError.message));\n});\n\nvar validateEmail = function validateEmail(email) {\n  return /^\\S+@\\S+\\.\\S+$/.test(email);\n};\n\nvar validateNumber = function validateNumber(number) {\n  return /^\\d+$/.test(number);\n};\n\nvar validateDecimalNumber = function validateDecimalNumber(number) {\n  return /^\\d+.*\\d*/.test(number) && !number.endsWith('.');\n};\n\nvar validatePhoneNumber = function validatePhoneNumber(number) {\n  return /^\\+{0,1}\\d+$/.test(number.replace(/ /g, ''));\n};\n\nexport var containsError = function containsError() {\n  var keyboardType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n  var isRequired = arguments.length > 1 ? arguments[1] : undefined;\n  var value = arguments.length > 2 ? arguments[2] : undefined;\n  var extraValidation = arguments.length > 3 ? arguments[3] : undefined;\n\n  if (extraValidation && !extraValidation.status) {\n    return {\n      status: true,\n      message: extraValidation.message\n    };\n  } else if (extraValidation && extraValidation.status) {\n    return {\n      status: false,\n      message: ''\n    };\n  }\n\n  if (keyboardType == 'email-address' && !validateEmail(value)) return {\n    status: true,\n    message: 'Enter a valid email'\n  };\n  if (isRequired && !value) return {\n    status: true,\n    message: 'Cannot be empty'\n  };\n  if (keyboardType == 'number-pad' || keyboardType == 'numeric' && !validateNumber(value)) return {\n    status: true,\n    message: 'Invalid number'\n  };\n  if (keyboardType == 'phone-pad' && !validatePhoneNumber(value)) return {\n    status: true,\n    message: 'Invalid phone number'\n  };\n  if (keyboardType == 'decimal-pad' && !validateDecimalNumber(value)) return {\n    status: true,\n    message: 'Invalid number'\n  };\n  return {\n    status: false,\n    message: ''\n  };\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    paddingHorizontal: 8,\n    height: 48,\n    alignItems: 'center',\n    marginBottom: 24\n  },\n  inputText: _objectSpread(_objectSpread({\n    flex: 1,\n    paddingVertical: 8\n  }, Platform.select({\n    web: {\n      outlineWidth: 0\n    }\n  })), {}, {\n    height: '90%'\n  }),\n  underneathText: {\n    marginTop: -24,\n    marginLeft: 8,\n    marginBottom: 24,\n    color: colors.red\n  },\n  label: {\n    marginBottom: 2\n  },\n  errorWrapper: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red\n  },\n  exclamation: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold'\n  }\n});\nFormItem.defaultProps = {\n  showErrorIcon: true,\n  errorBorderColor: colors.red\n};\nexport default FormItem;","map":{"version":3,"mappings":"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","names":["React","forwardRef","useState","useImperativeHandle","useRef","useEffect","Label","colors","ShowTextIcon","FormItem","ref","children","props","status","message","hasError","setHasError","Animated","Value","animatedBottom","shouldAnimate","setShouldAnimate","wrapperHeight","setWrapperHeight","isRequired","value","keyboardType","inputRef","secureTextEntry","hideText","setHideText","setState","validation","customValidation","containsError","focus","current","blur","clear","isFocused","getComponent","handleBlur","e","onBlur","handleFocus","floatingLabel","timing","toValue","textArea","useNativeDriver","duration","start","onFocus","View","style","styles","wrapper","height","alignItems","undefined","borderColor","errorBorderColor","borderWidth","onLayout","nativeEvent","layout","label","text","textStyle","asterik","marginLeft","labelStyle","bottom","paddingHorizontal","backgroundColor","interpolate","inputRange","outputRange","white","marginTop","marginBottom","flex","position","right","left","TextInput","inputText","textInputStyle","autoCapitalize","maxLength","placeholder","multiline","textAlignVertical","testID","showErrorIcon","errorWrapper","Text","exclamation","Pressable","onPress","hide","showIcon","hideIcon","underneathText","underneathTextStyle","validateEmail","email","test","validateNumber","number","validateDecimalNumber","endsWith","validatePhoneNumber","replace","extraValidation","StyleSheet","create","flexDirection","borderRadius","paddingVertical","Platform","select","web","outlineWidth","color","red","width","justifyContent","fontSize","fontWeight","defaultProps"],"sources":["index.tsx"],"sourcesContent":["import React, {\n  forwardRef,\n  useState,\n  useImperativeHandle,\n  useRef,\n  ComponentProps,\n  ReactNode,\n  useEffect,\n} from 'react';\nimport {\n  TextInput,\n  View,\n  StyleSheet,\n  Text,\n  NativeSyntheticEvent,\n  TextInputFocusEventData,\n  KeyboardTypeOptions,\n  Animated,\n  Platform,\n  Pressable,\n} from 'react-native';\n\nimport Label from '../Label';\nimport { colors } from '../../colors';\nimport ShowTextIcon from '../_icons/ShowTextIcon';\n\ntype Validation = { status: boolean; message: string };\n\ninterface Props extends ComponentProps<typeof TextInput> {\n  textInputStyle?: object | object[];\n  children?: ReactNode;\n  underneathText?: string;\n  underneathTextStyle?: object | object[];\n  label?: string;\n  labelStyle?: object | object[];\n  isRequired?: boolean;\n  value: string;\n  customValidation?: () => Validation;\n  asterik?: boolean;\n  floatingLabel?: boolean;\n  textArea?: boolean;\n  showErrorIcon?: boolean;\n  errorBorderColor?: string;\n  showIcon?: JSX.Element;\n  hideIcon?: JSX.Element;\n}\n\nconst FormItem = forwardRef(({ children, ...props }: Props, ref: any) => {\n  const [hasError, setHasError] = useState({ status: false, message: '' });\n  const [animatedBottom] = useState(new Animated.Value(0));\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n  const [wrapperHeight, setWrapperHeight] = useState(0);\n  const { isRequired, value, keyboardType } = props;\n  const inputRef: any = useRef();\n  const [hideText, setHideText] = useState(props.secureTextEntry);\n\n  useImperativeHandle(ref, () => ({\n    setState: () => {\n      let validation;\n      if (props.customValidation) validation = props.customValidation();\n      setHasError(containsError(keyboardType, isRequired!, value, validation));\n    },\n    focus: () => inputRef.current.focus(),\n    blur: () => inputRef.current.blur(),\n    clear: () => inputRef.current.clear(),\n    isFocused: () => inputRef.current.isFocused(),\n    getComponent: () => 'FormItem',\n  }));\n\n  const handleBlur = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    let validation;\n    if (props.customValidation) validation = props.customValidation();\n    setHasError(containsError(keyboardType, isRequired!, value, validation));\n    if (props.onBlur) props.onBlur(e);\n  };\n\n  const handleFocus = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setHasError({ status: false, message: '' });\n    if (props.floatingLabel && shouldAnimate)\n      Animated.timing(animatedBottom, {\n        toValue: props.textArea ? 24 : wrapperHeight / 2,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n\n    if (props.onFocus) props.onFocus(e);\n  };\n\n  useEffect(() => {\n    if (props.floatingLabel && props.value)\n      Animated.timing(animatedBottom, {\n        toValue: props.textArea ? 24 : wrapperHeight / 2,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n  }, [shouldAnimate]);\n\n  if (props.floatingLabel) {\n    return (\n      <>\n        <View\n          style={[\n            styles.wrapper,\n            props.textArea\n              ? { height: 120, alignItems: 'flex-start' }\n              : undefined,\n            props.style,\n            hasError.status\n              ? { borderColor: props.errorBorderColor, borderWidth: 1 }\n              : undefined,\n          ]}\n          onLayout={({ nativeEvent }) =>\n            setWrapperHeight(nativeEvent.layout.height)\n          }\n        >\n          {props.label && (\n            <Label\n              text={props.label}\n              textStyle={[\n                !props.asterik ? { marginLeft: 4 } : undefined,\n                props.labelStyle,\n              ]}\n              asterik={props.asterik}\n              style={[\n                props.floatingLabel ? { bottom: animatedBottom } : undefined,\n                {\n                  paddingHorizontal: 2,\n                  backgroundColor: animatedBottom.interpolate({\n                    inputRange: [0, props.textArea ? 24 : wrapperHeight / 2],\n                    outputRange: ['transparent', colors.white],\n                  }),\n                  marginTop: props.textArea ? 16 : 0,\n                },\n              ]}\n            />\n          )}\n\n          <View\n            style={[\n              styles.wrapper,\n              {\n                marginBottom: 0,\n                flex: 1,\n                paddingHorizontal: 0,\n                height: '100%',\n                position: 'absolute',\n                right: 8,\n                left: 8,\n                backgroundColor: 'transparent',\n              },\n            ]}\n          >\n            {children}\n            <TextInput\n              {...props}\n              style={[styles.inputText, props.textInputStyle]}\n              ref={inputRef}\n              onBlur={handleBlur}\n              onFocus={handleFocus}\n              value={props.value}\n              autoCapitalize={\n                props.autoCapitalize ||\n                (props.keyboardType == 'email-address' ? 'none' : undefined)\n              }\n              maxLength={props.maxLength || 150}\n              placeholder=\"\"\n              multiline={props.textArea || props.multiline}\n              textAlignVertical={props.textArea ? 'top' : 'center'}\n              testID=\"input\"\n              secureTextEntry={hideText}\n            />\n            {hasError.status && props.showErrorIcon && (\n              <View style={styles.errorWrapper} testID=\"error icon wrapper\">\n                <Text style={styles.exclamation}>{'\\u0021'}</Text>\n              </View>\n            )}\n            {props.secureTextEntry && !hasError.status && (\n              <Pressable onPress={() => setHideText(!hideText)}>\n                <ShowTextIcon\n                  hide={hideText!}\n                  showIcon={props.showIcon}\n                  hideIcon={props.hideIcon}\n                />\n              </Pressable>\n            )}\n          </View>\n        </View>\n\n        {hasError.status && (\n          <Text style={[styles.underneathText, props.underneathTextStyle]}>\n            {props.underneathText || hasError.message}\n          </Text>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {props.label && (\n        <Label\n          text={props.label}\n          textStyle={[\n            styles.label,\n            !props.asterik ? { marginLeft: 4 } : undefined,\n            props.labelStyle,\n          ]}\n          asterik={props.asterik}\n        />\n      )}\n      <View\n        style={[\n          styles.wrapper,\n          props.textArea ? { height: 120 } : undefined,\n          props.style,\n          hasError.status\n            ? { borderColor: props.errorBorderColor, borderWidth: 1 }\n            : undefined,\n        ]}\n      >\n        {children}\n        <TextInput\n          {...props}\n          style={[styles.inputText, props.textInputStyle]}\n          ref={inputRef}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          value={props.value}\n          autoCapitalize={\n            props.autoCapitalize ||\n            (props.keyboardType == 'email-address' ? 'none' : undefined)\n          }\n          maxLength={props.maxLength || 150}\n          multiline={props.textArea || props.multiline}\n          textAlignVertical={props.textArea ? 'top' : 'center'}\n          testID=\"input\"\n          secureTextEntry={hideText}\n        />\n        {hasError.status && props.showErrorIcon && (\n          <View style={styles.errorWrapper} testID=\"error icon wrapper\">\n            <Text style={styles.exclamation}>{'\\u0021'}</Text>\n          </View>\n        )}\n        {props.secureTextEntry && !hasError.status && (\n          <Pressable onPress={() => setHideText(!hideText)}>\n            <ShowTextIcon\n              hide={hideText!}\n              showIcon={props.showIcon}\n              hideIcon={props.hideIcon}\n            />\n          </Pressable>\n        )}\n      </View>\n\n      {hasError.status && (\n        <Text style={[styles.underneathText, props.underneathTextStyle]}>\n          {props.underneathText || hasError.message}\n        </Text>\n      )}\n    </>\n  );\n});\n\nconst validateEmail = (email: string) => {\n  return /^\\S+@\\S+\\.\\S+$/.test(email);\n};\n\nconst validateNumber = (number: string) => {\n  return /^\\d+$/.test(number);\n};\n\nconst validateDecimalNumber = (number: string) => {\n  return /^\\d+.*\\d*/.test(number) && !number.endsWith('.');\n};\n\nconst validatePhoneNumber = (number: string) =>\n  /^\\+{0,1}\\d+$/.test(number.replace(/ /g, ''));\n\nexport const containsError = (\n  keyboardType: KeyboardTypeOptions = 'default',\n  isRequired: boolean,\n  value: string,\n  extraValidation?: Validation\n) => {\n  if (extraValidation && !extraValidation.status) {\n    return {\n      status: true,\n      message: extraValidation.message,\n    };\n  } else if (extraValidation && extraValidation.status) {\n    return { status: false, message: '' };\n  }\n\n  if (keyboardType == 'email-address' && !validateEmail(value))\n    return { status: true, message: 'Enter a valid email' };\n  if (isRequired && !value) return { status: true, message: 'Cannot be empty' };\n  if (\n    keyboardType == 'number-pad' ||\n    (keyboardType == 'numeric' && !validateNumber(value))\n  )\n    return { status: true, message: 'Invalid number' };\n  if (keyboardType == 'phone-pad' && !validatePhoneNumber(value))\n    return { status: true, message: 'Invalid phone number' };\n  if (keyboardType == 'decimal-pad' && !validateDecimalNumber(value))\n    return { status: true, message: 'Invalid number' };\n\n  return { status: false, message: '' };\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    paddingHorizontal: 8,\n    height: 48,\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  inputText: {\n    flex: 1,\n    paddingVertical: 8,\n    ...Platform.select({ web: { outlineWidth: 0 } }),\n    height: '90%',\n  },\n  underneathText: {\n    marginTop: -24,\n    marginLeft: 8,\n    marginBottom: 24,\n    color: colors.red,\n  },\n  label: {\n    marginBottom: 2,\n  },\n  errorWrapper: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n  },\n  exclamation: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nFormItem.defaultProps = {\n  showErrorIcon: true,\n  errorBorderColor: colors.red,\n};\n\nexport default FormItem;\n"]},"metadata":{},"sourceType":"module"}