{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { colors } from \"../colors\";\nimport Label from \"./Label\";\nimport Modal from \"./Modal\";\nexport default function Picker(props) {\n  var _props$items$filter$;\n\n  var _useState = useState(props.selectedValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showPicker = _useState4[0],\n      setShowPicker = _useState4[1];\n\n  var _useState5 = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      position = _useState6[0],\n      setPosition = _useState6[1];\n\n  var _useState7 = useState(new Animated.Value(0)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      animatedBottom = _useState8[0],\n      setAnimatedBottom = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      shouldAnimate = _useState10[0],\n      setShouldAnimate = _useState10[1];\n\n  var pickerRef = useRef();\n\n  var handlePress = function handlePress() {\n    var _pickerRef$current;\n\n    if (props.floatingLabel && shouldAnimate) Animated.timing(animatedBottom, {\n      toValue: position.height - 10,\n      useNativeDriver: false,\n      duration: 300\n    }).start(function () {\n      return setShouldAnimate(false);\n    });\n    if (!showPicker) (_pickerRef$current = pickerRef.current) === null || _pickerRef$current === void 0 ? void 0 : _pickerRef$current.measureInWindow(function (x, y, width, height) {\n      setPosition({\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    });\n    setShowPicker(!showPicker);\n  };\n\n  useEffect(function () {\n    if (props.floatingLabel && props.selectedValue) Animated.timing(animatedBottom, {\n      toValue: position.height - 10,\n      useNativeDriver: false,\n      duration: 300\n    }).start(function () {\n      return setShouldAnimate(false);\n    });\n  }, [shouldAnimate]);\n  return React.createElement(React.Fragment, null, props.label && !props.floatingLabel && React.createElement(Label, {\n    text: props.label,\n    textStyle: props.labelStyle,\n    style: props.labelWrapperStyle,\n    asterik: props.asterik,\n    asterikStyle: props.asterikStyle\n  }), React.createElement(Pressable, {\n    style: [styles.pickerButton, props.buttonStyle],\n    onPress: handlePress,\n    ref: pickerRef,\n    onLayout: function onLayout(_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      setPosition(_objectSpread(_objectSpread({}, position), {}, {\n        height: nativeEvent.layout.height\n      }));\n      setAnimatedBottom(new Animated.Value(nativeEvent.layout.height / 4));\n    }\n  }, props.floatingLabel && props.label && React.createElement(Label, {\n    text: props.label,\n    textStyle: props.labelStyle,\n    style: [props.labelWrapperStyle, {\n      position: 'absolute',\n      bottom: animatedBottom,\n      paddingHorizontal: 2,\n      backgroundColor: animatedBottom.interpolate({\n        inputRange: [0, position.height / 3, position.height / 2],\n        outputRange: ['transparent', 'transparent', colors.white]\n      })\n    }],\n    asterik: props.asterik,\n    asterikStyle: props.asterikStyle\n  }), React.createElement(Text, {\n    style: [{\n      maxWidth: '90%',\n      opacity: props.floatingLabel && shouldAnimate ? 0 : 1\n    }, props.selectedValueStyle],\n    numberOfLines: 1\n  }, ((_props$items$filter$ = props.items.filter(function (item) {\n    return item.value === props.selectedValue;\n  })[0]) === null || _props$items$filter$ === void 0 ? void 0 : _props$items$filter$.label) || props.placeholder || '--Pick a value--'), React.createElement(View, {\n    style: [styles.childIconWrapper, props.iconWrapperStyle]\n  }, props.pickerIcon || React.createElement(View, {\n    style: styles.pickerIcon\n  }))), React.createElement(Modal, {\n    show: showPicker\n  }, React.createElement(Pressable, {\n    style: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      elevation: 3\n    }),\n    onPress: function onPress() {\n      return setShowPicker(false);\n    }\n  }, React.createElement(ScrollView, {\n    style: [styles.wrapper, {\n      width: position.width,\n      position: 'absolute',\n      top: position.y + position.height + 8,\n      left: position.x\n    }],\n    nestedScrollEnabled: true\n  }, props.items.map(function (item) {\n    return React.createElement(Pressable, {\n      key: item.value,\n      style: [styles.button, props.selectedValue === item.value ? {\n        backgroundColor: colors.blue\n      } : null],\n      onPress: function onPress() {\n        setSelectedValue(item.value);\n        setShowPicker(false);\n        props.onSelection(item);\n      }\n    }, React.createElement(Text, {\n      style: [props.itemLabelStyle, {\n        color: selectedValue === item.value ? colors.white : colors.text\n      }]\n    }, item.label));\n  })))));\n}\nvar styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.white,\n    borderRadius: 4,\n    zIndex: 1,\n    maxHeight: 200,\n    flexGrow: 0,\n    borderWidth: 0.5,\n    borderColor: colors.lightBlue,\n    elevation: 4,\n    shadowColor: colors.lightgrey,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 1,\n    shadowRadius: 4\n  },\n  button: {\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  },\n  pickerButton: {\n    borderRadius: 4,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 8,\n    marginBottom: 24,\n    height: 44,\n    backgroundColor: colors.white\n  },\n  childIconWrapper: {\n    backgroundColor: colors.white,\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    padding: 8,\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    marginRight: 8\n  },\n  pickerIcon: {\n    borderTopColor: colors.grey,\n    borderTopWidth: 10,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    borderLeftWidth: 9,\n    borderRightWidth: 9,\n    borderBottomWidth: 0,\n    borderRadius: 4\n  }\n});","map":{"version":3,"mappings":"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","names":["React","useState","useRef","useEffect","colors","Label","Modal","Picker","props","selectedValue","setSelectedValue","showPicker","setShowPicker","x","y","width","height","position","setPosition","Animated","Value","animatedBottom","setAnimatedBottom","shouldAnimate","setShouldAnimate","pickerRef","handlePress","floatingLabel","timing","toValue","useNativeDriver","duration","start","current","measureInWindow","label","text","textStyle","labelStyle","style","labelWrapperStyle","asterik","asterikStyle","Pressable","styles","pickerButton","buttonStyle","onPress","ref","onLayout","nativeEvent","layout","bottom","paddingHorizontal","backgroundColor","interpolate","inputRange","outputRange","white","Text","maxWidth","opacity","selectedValueStyle","numberOfLines","items","filter","item","value","placeholder","View","childIconWrapper","iconWrapperStyle","pickerIcon","show","StyleSheet","absoluteFillObject","elevation","ScrollView","wrapper","top","left","nestedScrollEnabled","map","key","button","blue","onSelection","itemLabelStyle","color","create","borderRadius","zIndex","maxHeight","flexGrow","borderWidth","borderColor","lightBlue","shadowColor","lightgrey","shadowOffset","shadowOpacity","shadowRadius","paddingVertical","flexDirection","alignItems","justifyContent","paddingLeft","marginBottom","alignSelf","padding","borderTopRightRadius","borderBottomRightRadius","marginRight","borderTopColor","grey","borderTopWidth","borderLeftColor","borderRightColor","borderLeftWidth","borderRightWidth","borderBottomWidth"],"sources":["Picker.tsx"],"sourcesContent":["import React, {\n  useState,\n  ReactText,\n  ReactNode,\n  RefObject,\n  useRef,\n  useEffect,\n} from 'react';\nimport {\n  View,\n  StyleSheet,\n  Pressable,\n  ScrollView,\n  Text,\n  Animated,\n} from 'react-native';\n\nimport { colors } from '../colors';\nimport Label from './Label';\nimport Modal from './Modal';\n\ninterface Item {\n  label: string;\n  value: ReactText;\n}\n\ninterface Props {\n  items: Array<Item>;\n  onSelection: (item: Item) => void;\n  selectedValue: ReactText;\n  pickerIcon?: ReactNode;\n  iconWrapperStyle?: object | object[];\n  asterik?: boolean;\n  labelStyle?: object | object[];\n  asterikStyle?: object | object[];\n  label?: ReactText;\n  labelWrapperStyle?: object | object[];\n  placeholder?: string;\n  selectedValueStyle?: object | object[];\n  buttonStyle?: object | object[];\n  itemLabelStyle?: object | object[];\n  floatingLabel?: boolean;\n}\n\nexport default function Picker(props: Props) {\n  const [selectedValue, setSelectedValue] = useState(props.selectedValue);\n  const [showPicker, setShowPicker] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0, width: 0, height: 0 });\n  const [animatedBottom, setAnimatedBottom] = useState(new Animated.Value(0));\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n\n  const pickerRef: RefObject<View> = useRef() as RefObject<View>;\n\n  const handlePress = () => {\n    if (props.floatingLabel && shouldAnimate)\n      Animated.timing(animatedBottom, {\n        toValue: position.height - 10,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n\n    if (!showPicker)\n      pickerRef.current?.measureInWindow(\n        (x: number, y: number, width: number, height: number) => {\n          setPosition({ x, y, width, height });\n        }\n      );\n    setShowPicker(!showPicker);\n  };\n\n  useEffect(() => {\n    if (props.floatingLabel && props.selectedValue)\n      Animated.timing(animatedBottom, {\n        toValue: position.height - 10,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n  }, [shouldAnimate]);\n\n  return (\n    <>\n      {props.label && !props.floatingLabel && (\n        <Label\n          text={props.label}\n          textStyle={props.labelStyle}\n          style={props.labelWrapperStyle}\n          asterik={props.asterik}\n          asterikStyle={props.asterikStyle}\n        />\n      )}\n      <Pressable\n        style={[styles.pickerButton, props.buttonStyle]}\n        onPress={handlePress}\n        ref={pickerRef}\n        onLayout={({ nativeEvent }) => {\n          setPosition({ ...position, height: nativeEvent.layout.height });\n          setAnimatedBottom(new Animated.Value(nativeEvent.layout.height / 4));\n        }}\n      >\n        {props.floatingLabel && props.label && (\n          <Label\n            text={props.label}\n            textStyle={props.labelStyle}\n            style={[\n              props.labelWrapperStyle,\n              {\n                position: 'absolute',\n                bottom: animatedBottom,\n                paddingHorizontal: 2,\n                backgroundColor: animatedBottom.interpolate({\n                  inputRange: [0, position.height / 3, position.height / 2],\n                  outputRange: ['transparent', 'transparent', colors.white],\n                }),\n              },\n            ]}\n            asterik={props.asterik}\n            asterikStyle={props.asterikStyle}\n          />\n        )}\n\n        <Text\n          style={[\n            {\n              maxWidth: '90%',\n              opacity: props.floatingLabel && shouldAnimate ? 0 : 1,\n            },\n            props.selectedValueStyle,\n          ]}\n          numberOfLines={1}\n        >\n          {props.items.filter((item) => item.value === props.selectedValue)[0]\n            ?.label ||\n            props.placeholder ||\n            '--Pick a value--'}\n        </Text>\n\n        <View style={[styles.childIconWrapper, props.iconWrapperStyle]}>\n          {props.pickerIcon || <View style={styles.pickerIcon} />}\n        </View>\n      </Pressable>\n\n      <Modal show={showPicker}>\n        <Pressable\n          style={{ ...StyleSheet.absoluteFillObject, elevation: 3 }}\n          onPress={() => setShowPicker(false)}\n        >\n          <ScrollView\n            style={[\n              styles.wrapper,\n              {\n                width: position.width,\n                position: 'absolute',\n                top: position.y + position.height + 8,\n                left: position.x,\n              },\n            ]}\n            nestedScrollEnabled\n          >\n            {props.items.map((item) => (\n              <Pressable\n                key={item.value}\n                style={[\n                  styles.button,\n                  props.selectedValue === item.value\n                    ? { backgroundColor: colors.blue }\n                    : null,\n                ]}\n                onPress={() => {\n                  setSelectedValue(item.value);\n                  setShowPicker(false);\n                  props.onSelection(item);\n                }}\n              >\n                <Text\n                  style={[\n                    props.itemLabelStyle,\n                    {\n                      color:\n                        selectedValue === item.value\n                          ? colors.white\n                          : colors.text,\n                    },\n                  ]}\n                >\n                  {item.label}\n                </Text>\n              </Pressable>\n            ))}\n          </ScrollView>\n        </Pressable>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.white,\n    borderRadius: 4,\n    zIndex: 1,\n    maxHeight: 200,\n    flexGrow: 0,\n    borderWidth: 0.5,\n    borderColor: colors.lightBlue,\n    elevation: 4,\n    shadowColor: colors.lightgrey,\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 1,\n    shadowRadius: 4,\n  },\n  button: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  pickerButton: {\n    borderRadius: 4,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 8,\n    marginBottom: 24,\n    height: 44,\n    backgroundColor: colors.white,\n  },\n  childIconWrapper: {\n    backgroundColor: colors.white,\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    padding: 8,\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    marginRight: 8,\n  },\n  pickerIcon: {\n    borderTopColor: colors.grey,\n    borderTopWidth: 10,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    borderLeftWidth: 9,\n    borderRightWidth: 9,\n    borderBottomWidth: 0,\n    borderRadius: 4,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}