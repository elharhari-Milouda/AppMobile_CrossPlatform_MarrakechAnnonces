{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Children, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { containsError } from \"./FormItem\";\nimport { colors } from \"../colors\";\nexport var submitForm;\nexport default function Form(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      width = _useState2[0],\n      setWidth = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      opacity = _useState4[0],\n      setOpacity = _useState4[1];\n\n  var handleButtonPress = function handleButtonPress() {\n    var fieldsWithError = [];\n    Children.forEach(props.children, function (child, index) {\n      var _child$ref, _child$ref$current;\n\n      if (child && ((_child$ref = child.ref) === null || _child$ref === void 0 ? void 0 : (_child$ref$current = _child$ref.current) === null || _child$ref$current === void 0 ? void 0 : _child$ref$current.getComponent()) == 'FormItem') {\n        var _child$props = child.props,\n            keyboardType = _child$props.keyboardType,\n            isRequired = _child$props.isRequired,\n            value = _child$props.value,\n            customValidation = _child$props.customValidation;\n        var validation;\n        if (customValidation) validation = customValidation();\n\n        if (containsError(keyboardType, isRequired, value, validation).status) {\n          var _child$ref2;\n\n          fieldsWithError.push(child.props.label || child.props.placeholder || 'FormItem' + index);\n          (_child$ref2 = child.ref) === null || _child$ref2 === void 0 ? void 0 : _child$ref2.current.setState();\n        }\n      }\n    });\n\n    if (fieldsWithError.length) {\n      console.error('The following fields do not fulfil their conditions:\\n' + JSON.stringify(fieldsWithError, null, 2));\n      return;\n    }\n\n    props.onButtonPress();\n  };\n\n  submitForm = function submitForm() {\n    return handleButtonPress();\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    keyboardVerticalOffset: Platform.OS == 'ios' ? props.keyboardVerticalOffset || 50 : undefined,\n    behavior: Platform.OS == 'ios' ? 'padding' : undefined,\n    style: props.style\n  }, props.children, React.createElement(Pressable, {\n    style: [styles.button, Platform.OS == 'ios' ? {\n      opacity: opacity\n    } : undefined, props.buttonStyle],\n    onPress: handleButtonPress,\n    android_ripple: {\n      color: 'lightgrey',\n      radius: width\n    },\n    onLayout: function onLayout(event) {\n      return setWidth(event.nativeEvent.layout.width);\n    },\n    onPressIn: function onPressIn() {\n      return setOpacity(0.5);\n    },\n    onPressOut: function onPressOut() {\n      return setOpacity(1);\n    }\n  }, React.createElement(Text, {\n    style: [styles.buttonText, props.buttonTextStyle]\n  }, props.buttonText || 'Submit')));\n}\nForm.defaultProps = {\n  style: {}\n};\nvar styles = StyleSheet.create({\n  button: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n    borderRadius: 8,\n    marginVertical: 32\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"mappings":"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","names":["React","Children","useState","containsError","colors","submitForm","Form","props","width","setWidth","opacity","setOpacity","handleButtonPress","fieldsWithError","forEach","children","child","index","ref","current","getComponent","keyboardType","isRequired","value","customValidation","validation","status","push","label","placeholder","setState","length","console","error","JSON","stringify","onButtonPress","KeyboardAvoidingView","keyboardVerticalOffset","Platform","OS","undefined","behavior","style","Pressable","styles","button","buttonStyle","onPress","android_ripple","color","radius","onLayout","event","nativeEvent","layout","onPressIn","onPressOut","Text","buttonText","buttonTextStyle","defaultProps","StyleSheet","create","height","justifyContent","alignItems","backgroundColor","red","borderRadius","marginVertical","fontSize","fontWeight"],"sources":["Form.tsx"],"sourcesContent":["import React, { Children, useState, ReactNode } from 'react';\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  Pressable,\n  Text,\n  StyleSheet,\n  TextInputSubmitEditingEventData,\n  NativeSyntheticEvent,\n  ViewStyle,\n} from 'react-native';\n\nimport { containsError } from './FormItem';\nimport { colors } from '../colors';\n\ninterface Props {\n  children: ReactNode;\n  keyboardVerticalOffset?: number;\n  buttonText?: string;\n  buttonStyle?: object | object[];\n  buttonTextStyle?: object | object[];\n  onButtonPress: () => void;\n  style?: ViewStyle;\n}\n\nexport let submitForm: (\n  e?: NativeSyntheticEvent<TextInputSubmitEditingEventData>\n) => void;\n\nexport default function Form(props: Props) {\n  const [width, setWidth] = useState(0);\n  const [opacity, setOpacity] = useState(1);\n\n  const handleButtonPress = () => {\n    const fieldsWithError: string[] = [];\n    Children.forEach(props.children, (child, index) => {\n      //@ts-ignore\n      if (child && child.ref?.current?.getComponent() == 'FormItem') {\n        const {\n          keyboardType,\n          isRequired,\n          value,\n          customValidation,\n          //@ts-ignore\n        } = child.props;\n        let validation;\n\n        if (customValidation) validation = customValidation();\n        if (containsError(keyboardType, isRequired, value, validation).status) {\n          fieldsWithError.push(\n            //@ts-ignore\n            child.props.label || child.props.placeholder || 'FormItem' + index\n          );\n          //@ts-ignore\n          child.ref?.current.setState();\n        }\n      }\n    });\n\n    if (fieldsWithError.length) {\n      console.error(\n        'The following fields do not fulfil their conditions:\\n' +\n          JSON.stringify(fieldsWithError, null, 2)\n      );\n      return;\n    }\n\n    props.onButtonPress();\n  };\n\n  submitForm = () => handleButtonPress();\n\n  return (\n    <KeyboardAvoidingView\n      keyboardVerticalOffset={\n        Platform.OS == 'ios' ? props.keyboardVerticalOffset || 50 : undefined\n      }\n      behavior={Platform.OS == 'ios' ? 'padding' : undefined}\n      style={props.style}\n    >\n      {props.children}\n      <Pressable\n        style={[\n          styles.button,\n          Platform.OS == 'ios' ? { opacity } : undefined,\n          props.buttonStyle,\n        ]}\n        onPress={handleButtonPress}\n        android_ripple={{ color: 'lightgrey', radius: width }}\n        onLayout={(event) => setWidth(event.nativeEvent.layout.width)}\n        onPressIn={() => setOpacity(0.5)}\n        onPressOut={() => setOpacity(1)}\n      >\n        <Text style={[styles.buttonText, props.buttonTextStyle]}>\n          {props.buttonText || 'Submit'}\n        </Text>\n      </Pressable>\n    </KeyboardAvoidingView>\n  );\n}\n\nForm.defaultProps = {\n  style: {},\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n    borderRadius: 8,\n    marginVertical: 32,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}